/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/_app";
exports.ids = ["pages/_app"];
exports.modules = {

/***/ "./src/contexts/AuthContext.tsx":
/*!**************************************!*\
  !*** ./src/contexts/AuthContext.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _utils_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/api */ \"./src/utils/api.ts\");\n\n\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst useAuth = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error(\"useAuth must be used within an AuthProvider\");\n    }\n    return context;\n};\nconst AuthProvider = ({ children })=>{\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Check if user is logged in on app load\n        const checkAuth = async ()=>{\n            const token = localStorage.getItem(\"authToken\");\n            const refreshToken = localStorage.getItem(\"refreshToken\");\n            const userData = localStorage.getItem(\"user\");\n            if (token && userData) {\n                try {\n                    const parsedUser = JSON.parse(userData);\n                    setUser(parsedUser);\n                // Optionally verify token with backend\n                // await apiService.verifyToken();\n                } catch (error) {\n                    console.error(\"Error parsing user data:\", error);\n                    await logout();\n                }\n            } else if (refreshToken && userData) {\n                // Try to refresh the token\n                try {\n                    const response = await _utils_api__WEBPACK_IMPORTED_MODULE_3__.apiService.refreshToken(refreshToken);\n                    const parsedUser = JSON.parse(userData);\n                    setUser(parsedUser);\n                } catch (error) {\n                    console.error(\"Token refresh failed:\", error);\n                    await logout();\n                }\n            }\n            setIsLoading(false);\n        };\n        checkAuth();\n    }, []);\n    const login = async (email, password)=>{\n        try {\n            setIsLoading(true);\n            const credentials = {\n                email,\n                password\n            };\n            const response = await _utils_api__WEBPACK_IMPORTED_MODULE_3__.apiService.login(credentials);\n            // Create a proper User object from the response\n            const userData = {\n                id: response.user.id,\n                name: response.user.name,\n                email: response.user.email,\n                role: response.user.role,\n                status: \"ACTIVE\",\n                createdAt: new Date().toISOString(),\n                updatedAt: new Date().toISOString()\n            };\n            // Store user data\n            localStorage.setItem(\"user\", JSON.stringify(userData));\n            setUser(userData);\n            return true;\n        } catch (error) {\n            console.error(\"Login error:\", error);\n            return false;\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    const logout = async ()=>{\n        try {\n            await _utils_api__WEBPACK_IMPORTED_MODULE_3__.apiService.logout();\n        } catch (error) {\n            console.error(\"Logout error:\", error);\n        } finally{\n            localStorage.removeItem(\"authToken\");\n            localStorage.removeItem(\"refreshToken\");\n            localStorage.removeItem(\"user\");\n            setUser(null);\n            router.push(\"/login\");\n        }\n    };\n    const value = {\n        user,\n        login,\n        logout,\n        isLoading,\n        isAuthenticated: !!user\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/home/satyendra/Desktop/project/dashboards/silver-lining-mvp/admin-dashboard/src/contexts/AuthContext.tsx\",\n        lineNumber: 122,\n        columnNumber: 5\n    }, undefined);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/contexts/AuthContext.tsx\n");

/***/ }),

/***/ "./src/contexts/ThemeContext.tsx":
/*!***************************************!*\
  !*** ./src/contexts/ThemeContext.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ThemeProvider: () => (/* binding */ ThemeProvider),\n/* harmony export */   useTheme: () => (/* binding */ useTheme)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst ThemeContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst useTheme = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ThemeContext);\n    if (context === undefined) {\n        throw new Error(\"useTheme must be used within a ThemeProvider\");\n    }\n    return context;\n};\nconst ThemeProvider = ({ children })=>{\n    const [isDarkMode, setIsDarkMode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Check for saved theme preference or default to light mode\n        const savedTheme = localStorage.getItem(\"theme\");\n        const prefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n        if (savedTheme === \"dark\" || !savedTheme && prefersDark) {\n            setIsDarkMode(true);\n            document.documentElement.classList.add(\"dark\");\n        } else {\n            setIsDarkMode(false);\n            document.documentElement.classList.remove(\"dark\");\n        }\n    }, []);\n    const toggleTheme = ()=>{\n        const newTheme = !isDarkMode;\n        setIsDarkMode(newTheme);\n        if (newTheme) {\n            document.documentElement.classList.add(\"dark\");\n            localStorage.setItem(\"theme\", \"dark\");\n        } else {\n            document.documentElement.classList.remove(\"dark\");\n            localStorage.setItem(\"theme\", \"light\");\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ThemeContext.Provider, {\n        value: {\n            isDarkMode,\n            toggleTheme\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/home/satyendra/Desktop/project/dashboards/silver-lining-mvp/admin-dashboard/src/contexts/ThemeContext.tsx\",\n        lineNumber: 53,\n        columnNumber: 5\n    }, undefined);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29udGV4dHMvVGhlbWVDb250ZXh0LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQThFO0FBTzlFLE1BQU1LLDZCQUFlSixvREFBYUEsQ0FBK0JLO0FBRTFELE1BQU1DLFdBQVc7SUFDdEIsTUFBTUMsVUFBVU4saURBQVVBLENBQUNHO0lBQzNCLElBQUlHLFlBQVlGLFdBQVc7UUFDekIsTUFBTSxJQUFJRyxNQUFNO0lBQ2xCO0lBQ0EsT0FBT0Q7QUFDVCxFQUFFO0FBTUssTUFBTUUsZ0JBQThDLENBQUMsRUFBRUMsUUFBUSxFQUFFO0lBQ3RFLE1BQU0sQ0FBQ0MsWUFBWUMsY0FBYyxHQUFHViwrQ0FBUUEsQ0FBQztJQUU3Q0MsZ0RBQVNBLENBQUM7UUFDUiw0REFBNEQ7UUFDNUQsTUFBTVUsYUFBYUMsYUFBYUMsT0FBTyxDQUFDO1FBQ3hDLE1BQU1DLGNBQWNDLE9BQU9DLFVBQVUsQ0FBQyxnQ0FBZ0NDLE9BQU87UUFFN0UsSUFBSU4sZUFBZSxVQUFXLENBQUNBLGNBQWNHLGFBQWM7WUFDekRKLGNBQWM7WUFDZFEsU0FBU0MsZUFBZSxDQUFDQyxTQUFTLENBQUNDLEdBQUcsQ0FBQztRQUN6QyxPQUFPO1lBQ0xYLGNBQWM7WUFDZFEsU0FBU0MsZUFBZSxDQUFDQyxTQUFTLENBQUNFLE1BQU0sQ0FBQztRQUM1QztJQUNGLEdBQUcsRUFBRTtJQUVMLE1BQU1DLGNBQWM7UUFDbEIsTUFBTUMsV0FBVyxDQUFDZjtRQUNsQkMsY0FBY2M7UUFFZCxJQUFJQSxVQUFVO1lBQ1pOLFNBQVNDLGVBQWUsQ0FBQ0MsU0FBUyxDQUFDQyxHQUFHLENBQUM7WUFDdkNULGFBQWFhLE9BQU8sQ0FBQyxTQUFTO1FBQ2hDLE9BQU87WUFDTFAsU0FBU0MsZUFBZSxDQUFDQyxTQUFTLENBQUNFLE1BQU0sQ0FBQztZQUMxQ1YsYUFBYWEsT0FBTyxDQUFDLFNBQVM7UUFDaEM7SUFDRjtJQUVBLHFCQUNFLDhEQUFDdkIsYUFBYXdCLFFBQVE7UUFBQ0MsT0FBTztZQUFFbEI7WUFBWWM7UUFBWTtrQkFDckRmOzs7Ozs7QUFHUCxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2lsdmVyLWxpbmluZy1hZG1pbi8uL3NyYy9jb250ZXh0cy9UaGVtZUNvbnRleHQudHN4PzdlMjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5cbmludGVyZmFjZSBUaGVtZUNvbnRleHRUeXBlIHtcbiAgaXNEYXJrTW9kZTogYm9vbGVhbjtcbiAgdG9nZ2xlVGhlbWU6ICgpID0+IHZvaWQ7XG59XG5cbmNvbnN0IFRoZW1lQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8VGhlbWVDb250ZXh0VHlwZSB8IHVuZGVmaW5lZD4odW5kZWZpbmVkKTtcblxuZXhwb3J0IGNvbnN0IHVzZVRoZW1lID0gKCkgPT4ge1xuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChUaGVtZUNvbnRleHQpO1xuICBpZiAoY29udGV4dCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCd1c2VUaGVtZSBtdXN0IGJlIHVzZWQgd2l0aGluIGEgVGhlbWVQcm92aWRlcicpO1xuICB9XG4gIHJldHVybiBjb250ZXh0O1xufTtcblxuaW50ZXJmYWNlIFRoZW1lUHJvdmlkZXJQcm9wcyB7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XG59XG5cbmV4cG9ydCBjb25zdCBUaGVtZVByb3ZpZGVyOiBSZWFjdC5GQzxUaGVtZVByb3ZpZGVyUHJvcHM+ID0gKHsgY2hpbGRyZW4gfSkgPT4ge1xuICBjb25zdCBbaXNEYXJrTW9kZSwgc2V0SXNEYXJrTW9kZV0gPSB1c2VTdGF0ZShmYWxzZSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBDaGVjayBmb3Igc2F2ZWQgdGhlbWUgcHJlZmVyZW5jZSBvciBkZWZhdWx0IHRvIGxpZ2h0IG1vZGVcbiAgICBjb25zdCBzYXZlZFRoZW1lID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3RoZW1lJyk7XG4gICAgY29uc3QgcHJlZmVyc0RhcmsgPSB3aW5kb3cubWF0Y2hNZWRpYSgnKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKScpLm1hdGNoZXM7XG4gICAgXG4gICAgaWYgKHNhdmVkVGhlbWUgPT09ICdkYXJrJyB8fCAoIXNhdmVkVGhlbWUgJiYgcHJlZmVyc0RhcmspKSB7XG4gICAgICBzZXRJc0RhcmtNb2RlKHRydWUpO1xuICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2RhcmsnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0SXNEYXJrTW9kZShmYWxzZSk7XG4gICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnZGFyaycpO1xuICAgIH1cbiAgfSwgW10pO1xuXG4gIGNvbnN0IHRvZ2dsZVRoZW1lID0gKCkgPT4ge1xuICAgIGNvbnN0IG5ld1RoZW1lID0gIWlzRGFya01vZGU7XG4gICAgc2V0SXNEYXJrTW9kZShuZXdUaGVtZSk7XG4gICAgXG4gICAgaWYgKG5ld1RoZW1lKSB7XG4gICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnZGFyaycpO1xuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3RoZW1lJywgJ2RhcmsnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2RhcmsnKTtcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd0aGVtZScsICdsaWdodCcpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxUaGVtZUNvbnRleHQuUHJvdmlkZXIgdmFsdWU9e3sgaXNEYXJrTW9kZSwgdG9nZ2xlVGhlbWUgfX0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9UaGVtZUNvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59OyAiXSwibmFtZXMiOlsiUmVhY3QiLCJjcmVhdGVDb250ZXh0IiwidXNlQ29udGV4dCIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwiVGhlbWVDb250ZXh0IiwidW5kZWZpbmVkIiwidXNlVGhlbWUiLCJjb250ZXh0IiwiRXJyb3IiLCJUaGVtZVByb3ZpZGVyIiwiY2hpbGRyZW4iLCJpc0RhcmtNb2RlIiwic2V0SXNEYXJrTW9kZSIsInNhdmVkVGhlbWUiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwicHJlZmVyc0RhcmsiLCJ3aW5kb3ciLCJtYXRjaE1lZGlhIiwibWF0Y2hlcyIsImRvY3VtZW50IiwiZG9jdW1lbnRFbGVtZW50IiwiY2xhc3NMaXN0IiwiYWRkIiwicmVtb3ZlIiwidG9nZ2xlVGhlbWUiLCJuZXdUaGVtZSIsInNldEl0ZW0iLCJQcm92aWRlciIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/contexts/ThemeContext.tsx\n");

/***/ }),

/***/ "./src/contexts/ToastContext.tsx":
/*!***************************************!*\
  !*** ./src/contexts/ToastContext.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ToastProvider: () => (/* binding */ ToastProvider),\n/* harmony export */   useToast: () => (/* binding */ useToast)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst ToastContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst useToast = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ToastContext);\n    if (!context) {\n        throw new Error(\"useToast must be used within a ToastProvider\");\n    }\n    return context;\n};\nconst ToastProvider = ({ children })=>{\n    const [toasts, setToasts] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const showToast = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((message, type, duration = 5000)=>{\n        const id = Math.random().toString(36).substr(2, 9);\n        const newToast = {\n            id,\n            type,\n            message,\n            duration\n        };\n        setToasts((prev)=>[\n                ...prev,\n                newToast\n            ]);\n        // Auto-remove toast after duration\n        if (duration > 0) {\n            setTimeout(()=>{\n                hideToast(id);\n            }, duration);\n        }\n    }, []);\n    const hideToast = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((id)=>{\n        setToasts((prev)=>prev.filter((toast)=>toast.id !== id));\n    }, []);\n    const clearToasts = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        setToasts([]);\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ToastContext.Provider, {\n        value: {\n            toasts,\n            showToast,\n            hideToast,\n            clearToasts\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/home/satyendra/Desktop/project/dashboards/silver-lining-mvp/admin-dashboard/src/contexts/ToastContext.tsx\",\n        lineNumber: 59,\n        columnNumber: 5\n    }, undefined);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29udGV4dHMvVG9hc3RDb250ZXh0LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWdGO0FBa0JoRixNQUFNSyw2QkFBZUosb0RBQWFBLENBQStCSztBQUUxRCxNQUFNQyxXQUFXO0lBQ3RCLE1BQU1DLFVBQVVOLGlEQUFVQSxDQUFDRztJQUMzQixJQUFJLENBQUNHLFNBQVM7UUFDWixNQUFNLElBQUlDLE1BQU07SUFDbEI7SUFDQSxPQUFPRDtBQUNULEVBQUU7QUFNSyxNQUFNRSxnQkFBOEMsQ0FBQyxFQUFFQyxRQUFRLEVBQUU7SUFDdEUsTUFBTSxDQUFDQyxRQUFRQyxVQUFVLEdBQUdWLCtDQUFRQSxDQUFVLEVBQUU7SUFFaEQsTUFBTVcsWUFBWVYsa0RBQVdBLENBQUMsQ0FBQ1csU0FBaUJDLE1BQWlCQyxXQUFXLElBQUk7UUFDOUUsTUFBTUMsS0FBS0MsS0FBS0MsTUFBTSxHQUFHQyxRQUFRLENBQUMsSUFBSUMsTUFBTSxDQUFDLEdBQUc7UUFDaEQsTUFBTUMsV0FBa0I7WUFBRUw7WUFBSUY7WUFBTUQ7WUFBU0U7UUFBUztRQUV0REosVUFBVVcsQ0FBQUEsT0FBUTttQkFBSUE7Z0JBQU1EO2FBQVM7UUFFckMsbUNBQW1DO1FBQ25DLElBQUlOLFdBQVcsR0FBRztZQUNoQlEsV0FBVztnQkFDVEMsVUFBVVI7WUFDWixHQUFHRDtRQUNMO0lBQ0YsR0FBRyxFQUFFO0lBRUwsTUFBTVMsWUFBWXRCLGtEQUFXQSxDQUFDLENBQUNjO1FBQzdCTCxVQUFVVyxDQUFBQSxPQUFRQSxLQUFLRyxNQUFNLENBQUNDLENBQUFBLFFBQVNBLE1BQU1WLEVBQUUsS0FBS0E7SUFDdEQsR0FBRyxFQUFFO0lBRUwsTUFBTVcsY0FBY3pCLGtEQUFXQSxDQUFDO1FBQzlCUyxVQUFVLEVBQUU7SUFDZCxHQUFHLEVBQUU7SUFFTCxxQkFDRSw4REFBQ1IsYUFBYXlCLFFBQVE7UUFBQ0MsT0FBTztZQUFFbkI7WUFBUUU7WUFBV1k7WUFBV0c7UUFBWTtrQkFDdkVsQjs7Ozs7O0FBR1AsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL3NpbHZlci1saW5pbmctYWRtaW4vLi9zcmMvY29udGV4dHMvVG9hc3RDb250ZXh0LnRzeD82NmJkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBjcmVhdGVDb250ZXh0LCB1c2VDb250ZXh0LCB1c2VTdGF0ZSwgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XG5cbmV4cG9ydCB0eXBlIFRvYXN0VHlwZSA9ICdzdWNjZXNzJyB8ICdlcnJvcicgfCAnd2FybmluZycgfCAnaW5mbyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVG9hc3Qge1xuICBpZDogc3RyaW5nO1xuICB0eXBlOiBUb2FzdFR5cGU7XG4gIG1lc3NhZ2U6IHN0cmluZztcbiAgZHVyYXRpb24/OiBudW1iZXI7XG59XG5cbmludGVyZmFjZSBUb2FzdENvbnRleHRUeXBlIHtcbiAgdG9hc3RzOiBUb2FzdFtdO1xuICBzaG93VG9hc3Q6IChtZXNzYWdlOiBzdHJpbmcsIHR5cGU6IFRvYXN0VHlwZSwgZHVyYXRpb24/OiBudW1iZXIpID0+IHZvaWQ7XG4gIGhpZGVUb2FzdDogKGlkOiBzdHJpbmcpID0+IHZvaWQ7XG4gIGNsZWFyVG9hc3RzOiAoKSA9PiB2b2lkO1xufVxuXG5jb25zdCBUb2FzdENvbnRleHQgPSBjcmVhdGVDb250ZXh0PFRvYXN0Q29udGV4dFR5cGUgfCB1bmRlZmluZWQ+KHVuZGVmaW5lZCk7XG5cbmV4cG9ydCBjb25zdCB1c2VUb2FzdCA9ICgpID0+IHtcbiAgY29uc3QgY29udGV4dCA9IHVzZUNvbnRleHQoVG9hc3RDb250ZXh0KTtcbiAgaWYgKCFjb250ZXh0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCd1c2VUb2FzdCBtdXN0IGJlIHVzZWQgd2l0aGluIGEgVG9hc3RQcm92aWRlcicpO1xuICB9XG4gIHJldHVybiBjb250ZXh0O1xufTtcblxuaW50ZXJmYWNlIFRvYXN0UHJvdmlkZXJQcm9wcyB7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XG59XG5cbmV4cG9ydCBjb25zdCBUb2FzdFByb3ZpZGVyOiBSZWFjdC5GQzxUb2FzdFByb3ZpZGVyUHJvcHM+ID0gKHsgY2hpbGRyZW4gfSkgPT4ge1xuICBjb25zdCBbdG9hc3RzLCBzZXRUb2FzdHNdID0gdXNlU3RhdGU8VG9hc3RbXT4oW10pO1xuXG4gIGNvbnN0IHNob3dUb2FzdCA9IHVzZUNhbGxiYWNrKChtZXNzYWdlOiBzdHJpbmcsIHR5cGU6IFRvYXN0VHlwZSwgZHVyYXRpb24gPSA1MDAwKSA9PiB7XG4gICAgY29uc3QgaWQgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwgOSk7XG4gICAgY29uc3QgbmV3VG9hc3Q6IFRvYXN0ID0geyBpZCwgdHlwZSwgbWVzc2FnZSwgZHVyYXRpb24gfTtcbiAgICBcbiAgICBzZXRUb2FzdHMocHJldiA9PiBbLi4ucHJldiwgbmV3VG9hc3RdKTtcblxuICAgIC8vIEF1dG8tcmVtb3ZlIHRvYXN0IGFmdGVyIGR1cmF0aW9uXG4gICAgaWYgKGR1cmF0aW9uID4gMCkge1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGhpZGVUb2FzdChpZCk7XG4gICAgICB9LCBkdXJhdGlvbik7XG4gICAgfVxuICB9LCBbXSk7XG5cbiAgY29uc3QgaGlkZVRvYXN0ID0gdXNlQ2FsbGJhY2soKGlkOiBzdHJpbmcpID0+IHtcbiAgICBzZXRUb2FzdHMocHJldiA9PiBwcmV2LmZpbHRlcih0b2FzdCA9PiB0b2FzdC5pZCAhPT0gaWQpKTtcbiAgfSwgW10pO1xuXG4gIGNvbnN0IGNsZWFyVG9hc3RzID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHNldFRvYXN0cyhbXSk7XG4gIH0sIFtdKTtcblxuICByZXR1cm4gKFxuICAgIDxUb2FzdENvbnRleHQuUHJvdmlkZXIgdmFsdWU9e3sgdG9hc3RzLCBzaG93VG9hc3QsIGhpZGVUb2FzdCwgY2xlYXJUb2FzdHMgfX0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9Ub2FzdENvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59OyAiXSwibmFtZXMiOlsiUmVhY3QiLCJjcmVhdGVDb250ZXh0IiwidXNlQ29udGV4dCIsInVzZVN0YXRlIiwidXNlQ2FsbGJhY2siLCJUb2FzdENvbnRleHQiLCJ1bmRlZmluZWQiLCJ1c2VUb2FzdCIsImNvbnRleHQiLCJFcnJvciIsIlRvYXN0UHJvdmlkZXIiLCJjaGlsZHJlbiIsInRvYXN0cyIsInNldFRvYXN0cyIsInNob3dUb2FzdCIsIm1lc3NhZ2UiLCJ0eXBlIiwiZHVyYXRpb24iLCJpZCIsIk1hdGgiLCJyYW5kb20iLCJ0b1N0cmluZyIsInN1YnN0ciIsIm5ld1RvYXN0IiwicHJldiIsInNldFRpbWVvdXQiLCJoaWRlVG9hc3QiLCJmaWx0ZXIiLCJ0b2FzdCIsImNsZWFyVG9hc3RzIiwiUHJvdmlkZXIiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/contexts/ToastContext.tsx\n");

/***/ }),

/***/ "./src/pages/_app.tsx":
/*!****************************!*\
  !*** ./src/pages/_app.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../styles/globals.css */ \"./src/styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _contexts_AuthContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../contexts/AuthContext */ \"./src/contexts/AuthContext.tsx\");\n/* harmony import */ var _contexts_ThemeContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../contexts/ThemeContext */ \"./src/contexts/ThemeContext.tsx\");\n/* harmony import */ var _contexts_ToastContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../contexts/ToastContext */ \"./src/contexts/ToastContext.tsx\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n\n\n\n\nfunction AppContent({ Component, pageProps }) {\n    const { user, isLoading } = (0,_contexts_AuthContext__WEBPACK_IMPORTED_MODULE_3__.useAuth)();\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_6__.useRouter)();\n    // Show loading spinner while checking authentication\n    if (isLoading) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"min-h-screen bg-gray-50 flex items-center justify-center\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600\"\n            }, void 0, false, {\n                fileName: \"/home/satyendra/Desktop/project/dashboards/silver-lining-mvp/admin-dashboard/src/pages/_app.tsx\",\n                lineNumber: 18,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/home/satyendra/Desktop/project/dashboards/silver-lining-mvp/admin-dashboard/src/pages/_app.tsx\",\n            lineNumber: 17,\n            columnNumber: 7\n        }, this);\n    }\n    // Redirect to login if not authenticated and not on login page\n    if (!user && router.pathname !== \"/login\") {\n        router.push(\"/login\");\n        return null;\n    }\n    // Redirect to dashboard if authenticated and on login page\n    if (user && router.pathname === \"/login\") {\n        router.push(\"/\");\n        return null;\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n        ...pageProps\n    }, void 0, false, {\n        fileName: \"/home/satyendra/Desktop/project/dashboards/silver-lining-mvp/admin-dashboard/src/pages/_app.tsx\",\n        lineNumber: 35,\n        columnNumber: 10\n    }, this);\n}\nfunction MyApp({ Component, pageProps }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_contexts_AuthContext__WEBPACK_IMPORTED_MODULE_3__.AuthProvider, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_contexts_ThemeContext__WEBPACK_IMPORTED_MODULE_4__.ThemeProvider, {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_contexts_ToastContext__WEBPACK_IMPORTED_MODULE_5__.ToastProvider, {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AppContent, {\n                    Component: Component,\n                    pageProps: pageProps\n                }, void 0, false, {\n                    fileName: \"/home/satyendra/Desktop/project/dashboards/silver-lining-mvp/admin-dashboard/src/pages/_app.tsx\",\n                    lineNumber: 43,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/home/satyendra/Desktop/project/dashboards/silver-lining-mvp/admin-dashboard/src/pages/_app.tsx\",\n                lineNumber: 42,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/home/satyendra/Desktop/project/dashboards/silver-lining-mvp/admin-dashboard/src/pages/_app.tsx\",\n            lineNumber: 41,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/home/satyendra/Desktop/project/dashboards/silver-lining-mvp/admin-dashboard/src/pages/_app.tsx\",\n        lineNumber: 40,\n        columnNumber: 5\n    }, this);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MyApp);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvX2FwcC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUEwQjtBQUNJO0FBRXlCO0FBQ0U7QUFDQTtBQUNqQjtBQUNVO0FBRWxELFNBQVNNLFdBQVcsRUFBRUMsU0FBUyxFQUFFQyxTQUFTLEVBQXdEO0lBQ2hHLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxTQUFTLEVBQUUsR0FBR0wsOERBQU9BO0lBQ25DLE1BQU1NLFNBQVNQLHNEQUFTQTtJQUV4QixxREFBcUQ7SUFDckQsSUFBSU0sV0FBVztRQUNiLHFCQUNFLDhEQUFDRTtZQUFJQyxXQUFVO3NCQUNiLDRFQUFDRDtnQkFBSUMsV0FBVTs7Ozs7Ozs7Ozs7SUFHckI7SUFFQSwrREFBK0Q7SUFDL0QsSUFBSSxDQUFDSixRQUFRRSxPQUFPRyxRQUFRLEtBQUssVUFBVTtRQUN6Q0gsT0FBT0ksSUFBSSxDQUFDO1FBQ1osT0FBTztJQUNUO0lBRUEsMkRBQTJEO0lBQzNELElBQUlOLFFBQVFFLE9BQU9HLFFBQVEsS0FBSyxVQUFVO1FBQ3hDSCxPQUFPSSxJQUFJLENBQUM7UUFDWixPQUFPO0lBQ1Q7SUFFQSxxQkFBTyw4REFBQ1I7UUFBVyxHQUFHQyxTQUFTOzs7Ozs7QUFDakM7QUFFQSxTQUFTUSxNQUFNLEVBQUVULFNBQVMsRUFBRUMsU0FBUyxFQUFZO0lBQy9DLHFCQUNFLDhEQUFDUCwrREFBWUE7a0JBQ1gsNEVBQUNDLGlFQUFhQTtzQkFDWiw0RUFBQ0MsaUVBQWFBOzBCQUNaLDRFQUFDRztvQkFBV0MsV0FBV0E7b0JBQVdDLFdBQVdBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFLdkQ7QUFFQSxpRUFBZVEsS0FBS0EsRUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NpbHZlci1saW5pbmctYWRtaW4vLi9zcmMvcGFnZXMvX2FwcC50c3g/ZjlkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0ICcuLi9zdHlsZXMvZ2xvYmFscy5jc3MnXG5pbXBvcnQgdHlwZSB7IEFwcFByb3BzIH0gZnJvbSAnbmV4dC9hcHAnXG5pbXBvcnQgeyBBdXRoUHJvdmlkZXIgfSBmcm9tICcuLi9jb250ZXh0cy9BdXRoQ29udGV4dCc7XG5pbXBvcnQgeyBUaGVtZVByb3ZpZGVyIH0gZnJvbSAnLi4vY29udGV4dHMvVGhlbWVDb250ZXh0JztcbmltcG9ydCB7IFRvYXN0UHJvdmlkZXIgfSBmcm9tICcuLi9jb250ZXh0cy9Ub2FzdENvbnRleHQnO1xuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInO1xuaW1wb3J0IHsgdXNlQXV0aCB9IGZyb20gJy4uL2NvbnRleHRzL0F1dGhDb250ZXh0JztcblxuZnVuY3Rpb24gQXBwQ29udGVudCh7IENvbXBvbmVudCwgcGFnZVByb3BzIH06IHsgQ29tcG9uZW50OiBBcHBQcm9wc1snQ29tcG9uZW50J107IHBhZ2VQcm9wczogYW55IH0pIHtcbiAgY29uc3QgeyB1c2VyLCBpc0xvYWRpbmcgfSA9IHVzZUF1dGgoKTtcbiAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCk7XG5cbiAgLy8gU2hvdyBsb2FkaW5nIHNwaW5uZXIgd2hpbGUgY2hlY2tpbmcgYXV0aGVudGljYXRpb25cbiAgaWYgKGlzTG9hZGluZykge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1pbi1oLXNjcmVlbiBiZy1ncmF5LTUwIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYW5pbWF0ZS1zcGluIHJvdW5kZWQtZnVsbCBoLTEyIHctMTIgYm9yZGVyLWItMiBib3JkZXItcHJpbWFyeS02MDBcIj48L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cblxuICAvLyBSZWRpcmVjdCB0byBsb2dpbiBpZiBub3QgYXV0aGVudGljYXRlZCBhbmQgbm90IG9uIGxvZ2luIHBhZ2VcbiAgaWYgKCF1c2VyICYmIHJvdXRlci5wYXRobmFtZSAhPT0gJy9sb2dpbicpIHtcbiAgICByb3V0ZXIucHVzaCgnL2xvZ2luJyk7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICAvLyBSZWRpcmVjdCB0byBkYXNoYm9hcmQgaWYgYXV0aGVudGljYXRlZCBhbmQgb24gbG9naW4gcGFnZVxuICBpZiAodXNlciAmJiByb3V0ZXIucGF0aG5hbWUgPT09ICcvbG9naW4nKSB7XG4gICAgcm91dGVyLnB1c2goJy8nKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJldHVybiA8Q29tcG9uZW50IHsuLi5wYWdlUHJvcHN9IC8+O1xufVxuXG5mdW5jdGlvbiBNeUFwcCh7IENvbXBvbmVudCwgcGFnZVByb3BzIH06IEFwcFByb3BzKSB7XG4gIHJldHVybiAoXG4gICAgPEF1dGhQcm92aWRlcj5cbiAgICAgIDxUaGVtZVByb3ZpZGVyPlxuICAgICAgICA8VG9hc3RQcm92aWRlcj5cbiAgICAgICAgICA8QXBwQ29udGVudCBDb21wb25lbnQ9e0NvbXBvbmVudH0gcGFnZVByb3BzPXtwYWdlUHJvcHN9IC8+XG4gICAgICAgIDwvVG9hc3RQcm92aWRlcj5cbiAgICAgIDwvVGhlbWVQcm92aWRlcj5cbiAgICA8L0F1dGhQcm92aWRlcj5cbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgTXlBcHAgIl0sIm5hbWVzIjpbIlJlYWN0IiwiQXV0aFByb3ZpZGVyIiwiVGhlbWVQcm92aWRlciIsIlRvYXN0UHJvdmlkZXIiLCJ1c2VSb3V0ZXIiLCJ1c2VBdXRoIiwiQXBwQ29udGVudCIsIkNvbXBvbmVudCIsInBhZ2VQcm9wcyIsInVzZXIiLCJpc0xvYWRpbmciLCJyb3V0ZXIiLCJkaXYiLCJjbGFzc05hbWUiLCJwYXRobmFtZSIsInB1c2giLCJNeUFwcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/pages/_app.tsx\n");

/***/ }),

/***/ "./src/utils/api.ts":
/*!**************************!*\
  !*** ./src/utils/api.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiService: () => (/* binding */ apiService),\n/* harmony export */   kycApi: () => (/* binding */ kycApi)\n/* harmony export */ });\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:9000/api\";\nclass ApiService {\n    constructor(){\n        this.isRefreshing = false;\n        this.failedQueue = [];\n        this.baseURL = API_BASE_URL;\n    }\n    processQueue(error, token = null) {\n        this.failedQueue.forEach(({ resolve, reject })=>{\n            if (error) {\n                reject(error);\n            } else {\n                resolve(token);\n            }\n        });\n        this.failedQueue = [];\n    }\n    async request(endpoint, options = {}, retryCount = 0) {\n        const url = `${this.baseURL}${endpoint}`;\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                ...options.headers\n            },\n            ...options\n        };\n        // Add auth token if available\n        const token = this.getAuthToken();\n        if (token) {\n            // Proactively refresh token if it's about to expire\n            if (this.shouldRefreshToken() && !this.isRefreshing) {\n                const refreshToken = this.getRefreshToken();\n                if (refreshToken) {\n                    this.isRefreshing = true;\n                    try {\n                        console.log(\"Proactively refreshing token...\");\n                        const refreshResponse = await this.refreshToken(refreshToken);\n                        this.setAuthToken(refreshResponse.accessToken);\n                        console.log(\"Token refreshed proactively\");\n                    } catch (error) {\n                        console.error(\"Proactive token refresh failed:\", error);\n                        this.logout();\n                        throw new Error(\"Session expired. Please login again.\");\n                    } finally{\n                        this.isRefreshing = false;\n                    }\n                }\n            }\n            const currentToken = this.getAuthToken();\n            if (currentToken) {\n                config.headers = {\n                    ...config.headers,\n                    Authorization: `Bearer ${currentToken}`\n                };\n            }\n        }\n        try {\n            const response = await fetch(url, config);\n            const data = await response.json();\n            // Handle token expiration\n            if (response.status === 401 && retryCount === 0) {\n                const refreshToken = this.getRefreshToken();\n                if (refreshToken && !this.isRefreshing) {\n                    this.isRefreshing = true;\n                    try {\n                        console.log(\"Token expired, attempting refresh...\");\n                        const refreshResponse = await this.refreshToken(refreshToken);\n                        this.setAuthToken(refreshResponse.accessToken);\n                        this.processQueue(null, refreshResponse.accessToken);\n                        console.log(\"Token refreshed successfully\");\n                        // Retry the original request with new token\n                        return this.request(endpoint, options, retryCount + 1);\n                    } catch (refreshError) {\n                        console.error(\"Token refresh failed:\", refreshError);\n                        this.processQueue(refreshError, null);\n                        this.logout();\n                        throw new Error(\"Session expired. Please login again.\");\n                    } finally{\n                        this.isRefreshing = false;\n                    }\n                } else if (this.isRefreshing) {\n                    // Wait for the refresh to complete\n                    return new Promise((resolve, reject)=>{\n                        this.failedQueue.push({\n                            resolve,\n                            reject\n                        });\n                    }).then(()=>{\n                        return this.request(endpoint, options, retryCount + 1);\n                    });\n                } else {\n                    console.log(\"No refresh token available, logging out\");\n                    this.logout();\n                    throw new Error(\"Session expired. Please login again.\");\n                }\n            }\n            if (!response.ok) {\n                throw new Error(data.error || `HTTP error! status: ${response.status}`);\n            }\n            return data;\n        } catch (error) {\n            console.error(\"API request failed:\", error);\n            throw error;\n        }\n    }\n    getAuthToken() {\n        if (false) {}\n        return null;\n    }\n    setAuthToken(token) {\n        if (false) {}\n    }\n    removeAuthToken() {\n        if (false) {}\n    }\n    getRefreshToken() {\n        if (false) {}\n        return null;\n    }\n    setRefreshToken(token) {\n        if (false) {}\n    }\n    removeRefreshToken() {\n        if (false) {}\n    }\n    isTokenExpired(token) {\n        try {\n            const payload = JSON.parse(atob(token.split(\".\")[1]));\n            const currentTime = Date.now() / 1000;\n            return payload.exp < currentTime;\n        } catch (error) {\n            return true;\n        }\n    }\n    shouldRefreshToken() {\n        const token = this.getAuthToken();\n        if (!token) return false;\n        try {\n            const payload = JSON.parse(atob(token.split(\".\")[1]));\n            const currentTime = Date.now() / 1000;\n            // Refresh if token expires in less than 5 minutes\n            return payload.exp - currentTime < 300;\n        } catch (error) {\n            return true;\n        }\n    }\n    // Connection test\n    async testConnection() {\n        try {\n            const response = await fetch(`${this.baseURL}/admin/health`, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            return response.ok;\n        } catch (error) {\n            console.error(\"Backend connection test failed:\", error);\n            return false;\n        }\n    }\n    // Authentication\n    async login(credentials) {\n        const response = await this.request(\"/auth/login\", {\n            method: \"POST\",\n            body: JSON.stringify(credentials)\n        });\n        if (response.success && response.data) {\n            this.setAuthToken(response.data.accessToken);\n            this.setRefreshToken(response.data.refreshToken);\n            return response.data;\n        }\n        throw new Error(response.error || \"Login failed\");\n    }\n    async register(userData) {\n        const response = await this.request(\"/auth/register\", {\n            method: \"POST\",\n            body: JSON.stringify(userData)\n        });\n        if (response.success && response.data) {\n            return response.data;\n        }\n        throw new Error(response.error || \"Registration failed\");\n    }\n    async logout() {\n        try {\n            await this.request(\"/auth/logout\", {\n                method: \"POST\"\n            });\n        } catch (error) {\n            console.error(\"Logout error:\", error);\n        } finally{\n            this.removeAuthToken();\n            this.removeRefreshToken();\n        }\n    }\n    async refreshToken(refreshToken) {\n        const response = await this.request(\"/auth/refresh\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                refreshToken\n            })\n        });\n        if (response.success && response.data) {\n            this.setAuthToken(response.data.accessToken);\n            return response.data;\n        }\n        throw new Error(response.error || \"Token refresh failed\");\n    }\n    // Users\n    async getUsers(params) {\n        const queryParams = new URLSearchParams();\n        if (params) {\n            Object.entries(params).forEach(([key, value])=>{\n                if (value !== undefined) {\n                    queryParams.append(key, value.toString());\n                }\n            });\n        }\n        const response = await this.request(`/users?${queryParams.toString()}`);\n        if (response.success && response.data) {\n            // Transform the response to match the expected structure\n            return {\n                items: response.data.users,\n                pagination: response.data.pagination\n            };\n        }\n        throw new Error(response.error || \"Failed to fetch users\");\n    }\n    async getUser(id) {\n        const response = await this.request(`/users/${id}`);\n        if (response.success && response.data) {\n            return response.data;\n        }\n        throw new Error(response.error || \"Failed to fetch user\");\n    }\n    async createUser(userData) {\n        const response = await this.request(\"/users\", {\n            method: \"POST\",\n            body: JSON.stringify(userData)\n        });\n        if (response.success && response.data) {\n            return response.data;\n        }\n        throw new Error(response.error || \"Failed to create user\");\n    }\n    async updateUser(id, userData) {\n        const response = await this.request(`/users/${id}`, {\n            method: \"PUT\",\n            body: JSON.stringify(userData)\n        });\n        if (response.success && response.data) {\n            return response.data;\n        }\n        throw new Error(response.error || \"Failed to update user\");\n    }\n    async deleteUser(id) {\n        const response = await this.request(`/users/${id}`, {\n            method: \"DELETE\"\n        });\n        if (!response.success) {\n            throw new Error(response.error || \"Failed to delete user\");\n        }\n    }\n    // KYC Applications\n    async getKYCApplications() {\n        const response = await this.request(\"/kyc\");\n        if (response.success && response.data) {\n            return response.data;\n        }\n        throw new Error(response.error || \"Failed to fetch KYC applications\");\n    }\n    async updateKYCStatus(id, status, notes) {\n        const response = await this.request(`/kyc/${id}/status`, {\n            method: \"PUT\",\n            body: JSON.stringify({\n                status,\n                notes\n            })\n        });\n        if (response.success && response.data) {\n            return response.data;\n        }\n        throw new Error(response.error || \"Failed to update KYC status\");\n    }\n    // Transactions\n    // Transactions\n    async getTransactions(params) {\n        const queryParams = new URLSearchParams();\n        if (params) {\n            Object.entries(params).forEach(([key, value])=>{\n                if (value !== undefined) {\n                    queryParams.append(key, value.toString());\n                }\n            });\n        }\n        const response = await this.request(`/transactions?${queryParams.toString()}`);\n        if (response.success && response.data) {\n            return {\n                data: response.data.transactions || response.data,\n                pagination: response.data.pagination || response.pagination\n            };\n        }\n        throw new Error(response.error || \"Failed to fetch transactions\");\n    }\n    async getTransaction(id) {\n        const response = await this.request(`/transactions/${id}`);\n        if (response.success && response.data) {\n            return response.data;\n        }\n        throw new Error(response.error || \"Failed to fetch transaction\");\n    }\n    async createTransaction(transactionData) {\n        const response = await this.request(\"/transactions\", {\n            method: \"POST\",\n            body: JSON.stringify(transactionData)\n        });\n        if (response.success && response.data) {\n            return response.data;\n        }\n        throw new Error(response.error || \"Failed to create transaction\");\n    }\n    async updateTransaction(id, transactionData) {\n        const response = await this.request(`/transactions/${id}`, {\n            method: \"PUT\",\n            body: JSON.stringify(transactionData)\n        });\n        if (response.success && response.data) {\n            return response.data;\n        }\n        throw new Error(response.error || \"Failed to update transaction\");\n    }\n    async deleteTransaction(id) {\n        const response = await this.request(`/transactions/${id}`, {\n            method: \"DELETE\"\n        });\n        if (!response.success) {\n            throw new Error(response.error || \"Failed to delete transaction\");\n        }\n    }\n    async bulkUpdateTransactions(transactionIds, status, remarks) {\n        const response = await this.request(\"/transactions/bulk/status\", {\n            method: \"PUT\",\n            body: JSON.stringify({\n                transactionIds,\n                status,\n                remarks\n            })\n        });\n        if (response.success && response.data) {\n            return response.data;\n        }\n        throw new Error(response.error || \"Failed to bulk update transactions\");\n    }\n    async getTransactionStats() {\n        const response = await this.request(\"/transactions/stats\");\n        if (response.success && response.data) {\n            return response.data;\n        }\n        throw new Error(response.error || \"Failed to fetch transaction statistics\");\n    }\n    async getTransactionAnalytics(params) {\n        const queryParams = new URLSearchParams();\n        if (params) {\n            Object.entries(params).forEach(([key, value])=>{\n                if (value !== undefined) {\n                    queryParams.append(key, value.toString());\n                }\n            });\n        }\n        const response = await this.request(`/analytics/transactions?${queryParams.toString()}`);\n        if (response.success && response.data) {\n            return response.data;\n        }\n        throw new Error(response.error || \"Failed to fetch transaction analytics\");\n    }\n    // Portfolio\n    async getPortfolios(params) {\n        const queryParams = new URLSearchParams();\n        if (params) {\n            Object.entries(params).forEach(([key, value])=>{\n                if (value !== undefined) {\n                    queryParams.append(key, value.toString());\n                }\n            });\n        }\n        const response = await this.request(`/portfolio?${queryParams.toString()}`);\n        if (response.success && response.data) {\n            return {\n                data: response.data.portfolios || response.data,\n                pagination: response.data.pagination || response.pagination\n            };\n        }\n        throw new Error(response.error || \"Failed to fetch portfolios\");\n    }\n    async getPortfolio(id) {\n        const response = await this.request(`/portfolio/${id}`);\n        if (response.success && response.data) {\n            return response.data;\n        }\n        throw new Error(response.error || \"Failed to fetch portfolio\");\n    }\n    async getUserPortfolio(userId) {\n        const response = await this.request(`/portfolio/user/${userId}`);\n        if (response.success && response.data) {\n            return response.data;\n        }\n        throw new Error(response.error || \"Failed to fetch user portfolio\");\n    }\n    async createPortfolio(portfolioData) {\n        const response = await this.request(\"/portfolio\", {\n            method: \"POST\",\n            body: JSON.stringify(portfolioData)\n        });\n        if (response.success && response.data) {\n            return response.data;\n        }\n        throw new Error(response.error || \"Failed to create portfolio\");\n    }\n    async updatePortfolio(id, portfolioData) {\n        const response = await this.request(`/portfolio/${id}`, {\n            method: \"PUT\",\n            body: JSON.stringify(portfolioData)\n        });\n        if (response.success && response.data) {\n            return response.data;\n        }\n        throw new Error(response.error || \"Failed to update portfolio\");\n    }\n    async deletePortfolio(id) {\n        const response = await this.request(`/portfolio/${id}`, {\n            method: \"DELETE\"\n        });\n        if (!response.success) {\n            throw new Error(response.error || \"Failed to delete portfolio\");\n        }\n    }\n    async getPortfolioStats() {\n        const response = await this.request(\"/portfolio/stats\");\n        if (response.success && response.data) {\n            return response.data;\n        }\n        throw new Error(response.error || \"Failed to fetch portfolio statistics\");\n    }\n    async getPortfolioAnalytics(params) {\n        const queryParams = new URLSearchParams();\n        if (params) {\n            Object.entries(params).forEach(([key, value])=>{\n                if (value !== undefined) {\n                    queryParams.append(key, value.toString());\n                }\n            });\n        }\n        const response = await this.request(`/portfolio/analytics/detailed?${queryParams.toString()}`);\n        if (response.success && response.data) {\n            return response.data;\n        }\n        throw new Error(response.error || \"Failed to fetch portfolio analytics\");\n    }\n    async syncPortfolio(id) {\n        const response = await this.request(`/portfolio/${id}/sync`, {\n            method: \"POST\"\n        });\n        if (response.success && response.data) {\n            return response.data;\n        }\n        throw new Error(response.error || \"Failed to sync portfolio\");\n    }\n    // Analytics\n    async getAnalyticsDashboard() {\n        const response = await this.request(\"/analytics/dashboard\", {\n            method: \"GET\"\n        });\n        if (response.success && response.data) return response.data;\n        throw new Error(response.error || \"Failed to fetch analytics dashboard\");\n    }\n    async getUserAnalytics() {\n        const response = await this.request(\"/analytics/users\", {\n            method: \"GET\"\n        });\n        if (response.success && response.data) return response.data;\n        throw new Error(response.error || \"Failed to fetch user analytics\");\n    }\n    async getFinancialAnalytics() {\n        const response = await this.request(\"/analytics/financial\", {\n            method: \"GET\"\n        });\n        if (response.success && response.data) return response.data;\n        throw new Error(response.error || \"Failed to fetch financial analytics\");\n    }\n    // Notifications\n    // Settings\n    async getSettings() {\n        const response = await this.request(\"/settings\");\n        if (response.success && response.data) {\n            return response.data;\n        }\n        throw new Error(response.error || \"Failed to fetch settings\");\n    }\n    async updateSetting(key, value) {\n        const response = await this.request(`/settings/${key}`, {\n            method: \"PUT\",\n            body: JSON.stringify({\n                value\n            })\n        });\n        if (response.success && response.data) {\n            return response.data;\n        }\n        throw new Error(response.error || \"Failed to update setting\");\n    }\n    // Admin\n    async getAdminDashboard() {\n        const response = await this.request(\"/admin/dashboard\");\n        if (response.success && response.data) {\n            return response.data;\n        }\n        throw new Error(response.error || \"Failed to fetch admin dashboard\");\n    }\n    async getSystemStats() {\n        const response = await this.request(\"/admin/stats\");\n        if (response.success && response.data) {\n            return response.data;\n        }\n        throw new Error(response.error || \"Failed to fetch system stats\");\n    }\n    // Logs methods\n    async getLogs(params = {}) {\n        const queryParams = new URLSearchParams();\n        Object.entries(params).forEach(([key, value])=>{\n            if (value !== undefined) queryParams.append(key, value.toString());\n        });\n        return this.request(`/logs?${queryParams.toString()}`);\n    }\n    async getAuditLogs(params = {}) {\n        const queryParams = new URLSearchParams();\n        Object.entries(params).forEach(([key, value])=>{\n            if (value !== undefined) queryParams.append(key, value.toString());\n        });\n        return this.request(`/logs/audit?${queryParams.toString()}`);\n    }\n    async getLogStats() {\n        return this.request(\"/logs/stats\");\n    }\n    async getUserLogs(userId, params = {}) {\n        const queryParams = new URLSearchParams();\n        Object.entries(params).forEach(([key, value])=>{\n            if (value !== undefined) queryParams.append(key, value.toString());\n        });\n        return this.request(`/logs/user/${userId}?${queryParams.toString()}`);\n    }\n    // Enhanced Notifications methods\n    async getNotifications(params = {}) {\n        const queryParams = new URLSearchParams();\n        Object.entries(params).forEach(([key, value])=>{\n            if (value !== undefined) queryParams.append(key, value.toString());\n        });\n        return this.request(`/notifications?${queryParams.toString()}`);\n    }\n    async markNotificationAsRead(id) {\n        return this.request(`/notifications/${id}/read`, {\n            method: \"PUT\"\n        });\n    }\n    async markAllNotificationsAsRead() {\n        return this.request(\"/notifications/mark-all-read\", {\n            method: \"PUT\"\n        });\n    }\n    async deleteNotification(id) {\n        return this.request(`/notifications/${id}`, {\n            method: \"DELETE\"\n        });\n    }\n    async getNotificationStats() {\n        return this.request(\"/notifications/stats\");\n    }\n    async createNotification(data) {\n        return this.request(\"/notifications\", {\n            method: \"POST\",\n            body: JSON.stringify(data)\n        });\n    }\n    async sendTemplateNotification(templateId, data) {\n        return this.request(`/notifications/template/${templateId}`, {\n            method: \"POST\",\n            body: JSON.stringify(data)\n        });\n    }\n    async createSystemNotification(data) {\n        return this.request(\"/notifications/system\", {\n            method: \"POST\",\n            body: JSON.stringify(data)\n        });\n    }\n    async getAllNotifications(params = {}) {\n        const queryParams = new URLSearchParams();\n        Object.entries(params).forEach(([key, value])=>{\n            if (value !== undefined) queryParams.append(key, value.toString());\n        });\n        return this.request(`/notifications/all?${queryParams.toString()}`);\n    }\n    // Logging\n    async createLog(logEntry) {\n        return this.request(\"/logs\", {\n            method: \"POST\",\n            body: JSON.stringify(logEntry)\n        });\n    }\n}\nconst apiService = new ApiService();\n// KYC API functions - using the existing ApiService pattern\nconst kycApi = {\n    // Get all KYC applications with pagination and filtering\n    getAllKYC: async (params)=>{\n        const queryParams = new URLSearchParams();\n        if (params?.status) queryParams.append(\"status\", params.status);\n        if (params?.search) queryParams.append(\"search\", params.search);\n        if (params?.page) queryParams.append(\"page\", params.page.toString());\n        if (params?.limit) queryParams.append(\"limit\", params.limit.toString());\n        if (params?.sortBy) queryParams.append(\"sortBy\", params.sortBy);\n        if (params?.sortOrder) queryParams.append(\"sortOrder\", params.sortOrder);\n        const response = await fetch(`${API_BASE_URL}/kyc?${queryParams}`, {\n            headers: {\n                \"Authorization\": `Bearer ${localStorage.getItem(\"authToken\")}`,\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch KYC applications\");\n        }\n        return response.json();\n    },\n    // Get KYC by ID\n    getKYCById: async (id)=>{\n        const response = await fetch(`${API_BASE_URL}/kyc/${id}`, {\n            headers: {\n                \"Authorization\": `Bearer ${localStorage.getItem(\"authToken\")}`,\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch KYC application\");\n        }\n        return response.json();\n    },\n    // Update KYC status (approve/reject)\n    updateKYCStatus: async (id, data)=>{\n        const response = await fetch(`${API_BASE_URL}/kyc/${id}/status`, {\n            method: \"PUT\",\n            headers: {\n                \"Authorization\": `Bearer ${localStorage.getItem(\"authToken\")}`,\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        });\n        if (!response.ok) {\n            throw new Error(\"Failed to update KYC status\");\n        }\n        return response.json();\n    },\n    // Bulk update KYC status\n    bulkUpdateKYCStatus: async (data)=>{\n        const response = await fetch(`${API_BASE_URL}/kyc/bulk/status`, {\n            method: \"PUT\",\n            headers: {\n                \"Authorization\": `Bearer ${localStorage.getItem(\"authToken\")}`,\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        });\n        if (!response.ok) {\n            throw new Error(\"Failed to bulk update KYC status\");\n        }\n        return response.json();\n    },\n    // Delete KYC application\n    deleteKYC: async (id)=>{\n        const response = await fetch(`${API_BASE_URL}/kyc/${id}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Authorization\": `Bearer ${localStorage.getItem(\"authToken\")}`,\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        if (!response.ok) {\n            throw new Error(\"Failed to delete KYC application\");\n        }\n        return response.json();\n    },\n    // Get KYC statistics\n    getKYCStats: async ()=>{\n        const response = await fetch(`${API_BASE_URL}/kyc/stats/overview`, {\n            headers: {\n                \"Authorization\": `Bearer ${localStorage.getItem(\"authToken\")}`,\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch KYC statistics\");\n        }\n        return response.json();\n    },\n    // Get KYC by user\n    getKYCByUser: async (userId)=>{\n        const response = await fetch(`${API_BASE_URL}/kyc/user/${userId}`, {\n            headers: {\n                \"Authorization\": `Bearer ${localStorage.getItem(\"authToken\")}`,\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch user KYC applications\");\n        }\n        return response.json();\n    },\n    // Update KYC verification details\n    updateKYCVerification: async (id, verificationDetails)=>{\n        const response = await fetch(`${API_BASE_URL}/kyc/${id}/verification`, {\n            method: \"PUT\",\n            headers: {\n                \"Authorization\": `Bearer ${localStorage.getItem(\"authToken\")}`,\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                verificationDetails\n            })\n        });\n        if (!response.ok) {\n            throw new Error(\"Failed to update KYC verification details\");\n        }\n        return response.json();\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utils/api.ts\n");

/***/ }),

/***/ "./src/styles/globals.css":
/*!********************************!*\
  !*** ./src/styles/globals.css ***!
  \********************************/
/***/ (() => {



/***/ }),

/***/ "next/dist/compiled/next-server/pages.runtime.dev.js":
/*!**********************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages.runtime.dev.js" ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/pages.runtime.dev.js");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react-dom":
/*!****************************!*\
  !*** external "react-dom" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-dom");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "react/jsx-runtime":
/*!************************************!*\
  !*** external "react/jsx-runtime" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-runtime");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@swc"], () => (__webpack_exec__("./src/pages/_app.tsx")));
module.exports = __webpack_exports__;

})();